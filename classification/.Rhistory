shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("mda")
runApp()
install.packages("klaR")
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/m-logit')
shiny::runApp()
shiny::runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/text_summarization')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/cluster-analysis')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/m-logit')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/m-logit')
runApp()
runApp()
runApp()
shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/m-logit')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/discriminant-analysis')
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
uninstall("ggplot2")
package.uninstall("ggplot2")
remove.packages("ggplot2")
remove.packages("ggplot2")
runApp()
library(ggplot2)
install.packages("ggplot2")
runApp()
runApp()
library(ggplot2)
runApp()
remove.packages("Hmisc", lib="~/R/win-library/3.6")
runApp()
remove.packages("ggplot2", lib="~/R/win-library/3.6")
remove.packages("ggplot2", lib="~/R/win-library/3.6")
library(ggplot2)
remove.packages("Hmisc", lib="~/R/win-library/3.6")
remove.packages("klaR", lib="~/R/win-library/3.6")
runApp()
install.packages(c("backports", "BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
install.packages(c("backports", "BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
install.packages(c("backports", "BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
install.packages(c("backports", "BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
install.packages(c("backports", "BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
shiny::runApp('C:/Users/20054/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/discriminant-analysis')
shiny::runApp()
install.packages(c("BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
install.packages(c("BH", "bibtex", "bit", "bit64", "broom", "C50", "callr", "caTools", "chron", "cli", "clipr", "colorspace", "config", "covr", "crayon", "crosstalk", "data.table", "DBI", "Deriv", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effsize", "ellipsis", "fansi", "fastmap", "flexmix", "foreach", "Formula", "fpc", "fs", "generics", "ggfortify", "gh", "git2r", "glue", "gower", "gplots", "gtools", "hms", "htmltools", "httpuv", "httr", "inum", "ipred", "isoband", "iterators", "jsonlite", "keras", "knitr", "labeling", "later", "lava", "lavaan", "libcoin", "lmtest", "lubridate", "magick", "magrittr", "mclust", "memoise", "mime", "mvtnorm", "openssl", "partykit", "pillar", "pkgbuild", "pkgload", "plyr", "pROC", "processx", "promises", "ps", "purrr", "quantmod", "R6", "rappdirs", "Rcpp", "RcppArmadillo", "Rdpack", "readr", "recipes", "remotes", "reshape2", "reticulate", "rex", "rJava", "rlang", "rmarkdown", "robustbase", "ROCR", "roxygen2", "rpart.plot", "rprojroot", "RSQLite", "rstudioapi", "rversions", "scales", "shiny", "SQUAREM", "statmod", "stringi", "sys", "tensorflow", "testthat", "tfruns", "tibble", "tidyr", "tinytex", "TTR", "usethis", "withr", "xfun", "xgboost", "xlsx", "xml2", "xts", "zoo"))
install.packages(c("party", "partykit", "rpart.plot"))
shiny::runApp('C:/Users/20054/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp()
runApp('C:/Users/20054/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('C:/Users/20054/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/m-logit')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
#Read data into a data frame seg.df (please CHANGE the file path that applies to you)
rm(list=ls())
getwd()
seg.df <- read.csv("ClusterCable.csv")
#View data frame
View(seg.df)
#copy data frame to a new data frame seg.df.num
seg.df.num <- seg.df
#convert the factor variables to numeric
seg.df.num$gender <- ifelse(seg.df$gender=="Male", 0, 1)
seg.df.num$ownHome <- ifelse(seg.df$ownHome=="ownNo", 0, 1)
#show summary of the data frame
summary(seg.df.num)
#scale data in data frame seg.df.num to a data frame seg.df.se
seg.df.se <- scale(seg.df.num)
#show summary of the data frame to check if scaling was done
summary(seg.df.se)
#starting assignments are random
set.seed(96743)
#deciding the optimal number of clusters
wss <- (nrow(seg.df.se)-1)*sum(apply(seg.df.se,2,var))
for (i in 2:20) {
wss[i] <- sum(kmeans(seg.df.se,centers=i)$withinss)
}
plot(1:20, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")
#doing k-means clustering. starting assignments are random
set.seed(96743)
seg.k <- kmeans(seg.df.se, centers=4)
#comparing clusters, shows the mean values in groups for all variables
aggregate(seg.df.num, list(seg.k$cluster), function(x) mean(as.numeric(x)))
#the lines below do the aggregation for each variable separately (a bit redundant)
aggregate(income ~ seg.k$cluster, data=seg.df.num, mean)
aggregate(age ~ seg.k$cluster, data=seg.df.num, mean)
aggregate(gender ~ seg.k$cluster, data=seg.df.num, mean)
aggregate(kids ~ seg.k$cluster, data=seg.df.num, mean)
aggregate(ownHome ~ seg.k$cluster, data=seg.df.num, mean)
#inspect instances in a clusters (to check if the aggregation numbers make sense)
seg.df.num[seg.k$cluster==1,]
#Boxplot for age (boxplots give mean, range, outliers, etc., compared to just means)
boxplot(seg.df.num$age ~ seg.k$cluster, xlab="Age", ylab="Segment", horizontal=TRUE)
#Barplot for gender
hist.df.gender <- aggregate(gender ~ seg.k$cluster, data=seg.df.num, mean)
barplot(hist.df.gender$gender, space=0.1, names = hist.df.gender$`seg.k$cluster`, xlab='Cluster', ylim=c(0,1), col=c("red"), ylab = 'Women (mean) in Cluster', main='Gender Ratios in Clusters')
#Boxplot for income
boxplot(seg.df.num$income ~ seg.k$cluster, xlab="Income", ylab="Segment", horizontal=TRUE)
#Boxplot for kids
boxplot(seg.df.num$kids ~ seg.k$cluster, xlab="Kids", ylab="Segment", horizontal=TRUE)
#Barplot for own home
hist.df.ownhome <- aggregate(ownHome ~ seg.k$cluster, data=seg.df.num, mean)
barplot(hist.df.ownhome$ownHome, space=0.1, names = hist.df.ownhome$`seg.k$cluster`, xlab='Cluster', ylim=c(0,1), col=c("red"), ylab = 'Homeowners (mean) in Cluster', main='Homeowner Ratios in Clusters')
traindata <- read.table("optdigits.tra", sep=",")
trn <- data.matrix(traindata)
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp()
shiny::runApp()
shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
shiny::runApp()
runApp()
runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/cluster-analysis')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/regression')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-stats')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/regression')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/regression')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/regression')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/regression')
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
shiny::runApp()
if (!require("ggfortify")) {install.packages("ggfortify")}
library(ggfortify)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
try(require("randomForest")||install.packages("randomForest"))
try(require("randomForest")||install.packages("randomForest"))
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
fit.rft <- randomForest::randomForest( paste(form1), data=Dataset() )
runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/decision-tree')
install.packages("ggfortify")
shiny::runApp()
shiny::runApp('D:/OneDrive - Indian School of Business/Laptop sync/Desktop/GitHub/Manish-Gangwar/ISB-IIDS/ML/basic-text-analysis')
